<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label23.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wIBCiszWk/uIAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAH8SURBVFhH
        xdfPK6VRHMfxiyiNSaIYWUwG2ZBILEhZyyxmqWxmoewsKBaKP4CFpYVYWFnJj7BSFlgiW9PUzGwnJTPl
        1/tT99TpdJ7nuO69x7de9dznnu/zfLrPj3NuxlOdOMcDngvsDCVIrQv4mgulColViSdo4DCaPVoxigXs
        4A/ck6RJDaAvzcBP2uFUBS5hHzBXwQD/8RWNmMA3lEOlX8B30FwEA8xiAHcwTbp5dHm+WPveKhigHidw
        G78jFOAGW5jDSnafKxigGjqQ2ziPpABrqIVdLfCNDQboxyrspkf0ISnAJOxqwDR8Y4MB9qFfYRP/8Bvj
        UCUF0D2yiG38yu5LEgygQTqQbrpSDGIZ64hyE2rQBkbwM/tZThElgOaALtiPoUQLoIlIj5zbGC2AHqkl
        uI3RAsxAT4LbGC2AZrofcBvdAJoz7O9fKxigA2ZKttkB9lAG36UKSQ2g6bYXZvC9tW0HOIRmyKT3fZrU
        ACpdAjP4wNp2L4Fez2Y7F6kB9Pbrxm6W1gWmMdpNqBtQk4vCtME0RgtgBjbhg/X5XQKopqCZ7t0CqPTI
        aQVc9AC67mbgEOzluJZZRQ+guoavMcolUPXgCm5jtACmNLDG8hH5BtBiN/jfMK1yDXCLY2jOGEMd8qrP
        8J1I3JO1Q2vKgpYexyP8RQFOlsm8AIkDZTz9FBW9AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnCheckin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wIBCi4UgjKvDgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAG7SURBVFhH
        7dfNKwVRGMfxEVKyIbKQtVLEAoV/QHb+Agv5C5S8lFgpL0s2JJbKxl6ysLDxEsUCsZEkEUrk5ftc5jZz
        7nPnzDDjWvjVp6Yz58x57szcmTPOX0o9BjCegGG0QE0epvGG94QtIB++9ELrnBQ5G77sQ+uYlEvIWU/n
        GVrHJJWhFqloHXawbLGK7xZfiVl0I2PnGQoQJqMwx4fhFnCAjJ3XqIAtch3nYY43TaIGx542t4AX+Dq7
        HnBicQHvmDWlTZ4BkkLswW13C5DtdONPHEFSDfeXeidfgbd/7AXIqeyARIro+9xUJxeBBTyiDaUWVViH
        O+4JbhGSbJOLwAIOETbyVPOOlSI6UYRskwvrJVhCv8UYbmCOfcWd0WaK/R6I6u8XsAjttEc1A+01H9tN
        GCYbMOcILED+hu3Q/npRNUIe7eYc/zehtYB7aC+gqG6hHT+wALlm5YgjJTiFOUdgAecIuyCxRdYM2zDn
        sF6CXWjLsKi2oB3fV0CuFqVzX9s5W5Zv4gpOD7SOSRlEM+QRPYVUJvAbn2ayiG2A3OiyhixGOnWQF4j3
        ozIuQ2hFE0bQBd/XUY7iOB/kv73qz/LcygAAAABJRU5ErkJggg==
</value>
  </data>
</root>